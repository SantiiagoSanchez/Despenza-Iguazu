@page "/api/Marca/Crear"
@inject NavigationManager navigationManager
@inject IHttpServicio http



<!-- FONDO CON GRADIENTE -->
<div class="position-fixed top-0 start-0 w-100 h-100 d-flex justify-content-center align-items-center"
     style="background: linear-gradient(135deg, #6a0dad, #000000); z-index: 1050;">

    <!-- MODAL CENTRAL -->
    <div class="bg-dark text-white rounded-4 shadow-lg fade-in p-4"
         style="width: 100%; max-width: 600px; position: relative;">

        <!-- BOTÓN DE CIERRE -->
        <button type="button" class="btn-close btn-close-white position-absolute top-0 end-0 m-3"
                aria-label="Cerrar" @onclick="Cancelar"></button>

        <!-- TÍTULO -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div>
                <h5 class="fw-semibold mb-1">Marcas de producto</h5>
                <p class="text-light mb-0">Gestioná las marcas disponibles</p>
            </div>
        </div>

        <!-- TABLA DE MARCAS -->
        <div class="table-responsive mb-4">
            <table class="table table-dark table-hover align-middle table-sm">
                <thead class="table-secondary text-dark">
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th style="width: 50px;">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @if (listamarca == null)
                    {
                        <tr>
                            <td colspan="3">Buscando marcas registradas...</td>
                        </tr>
                    }
                    else if (!listamarca.Any())
                    {
                        <tr>
                            <td colspan="3">No se encontraron marcas registradas.</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var item in listamarca)
                        {
                            <tr>
                                <td>@item.Id</td>
                                <td>@item.Nombre</td>
                                <td>
                                    <button class="btn btn-sm btn-danger" title="Eliminar"
                                            @onclick="() => EliminarTipoGasto(item.Id)">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                             fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5
                                                             0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5
                                                             0a.5.5 0 0 1 .5.5v6a.5.5 0 0
                                                             1-1 0V6a.5.5 0 0 1 .5-.5m3
                                                             .5a.5.5 0 0 0-1 0v6a.5.5
                                                             0 0 0 1 0z" />
                                            <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2
                                                             2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1
                                                             1 0 0 1-1-1V2a1 1 0 0 1
                                                             1-1H6a1 1 0 0 1 1-1h2a1 1
                                                             0 0 1 1 1h3.5a1 1 0 0 1
                                                             1 1z" />
                                        </svg>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

        <!-- FORMULARIO DE NUEVA MARCA -->
        <EditForm Model="marca" OnValidSubmit="Grabar">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <h6 class="fw-bold">Nueva marca</h6>

            <div class="mb-3">
                <label class="form-label">Nombre de la marca</label>
                <InputText class="form-control bg-dark text-white border-secondary" @bind-Value="marca.Nombre" />
            </div>

            <!-- BOTONES -->
            <div class="d-flex justify-content-end border-top pt-3 gap-2">
                <button type="button" class="btn btn-outline-light" @onclick="Cancelar">Cancelar</button>
                <button type="submit" class="btn btn-success d-flex align-items-center gap-2">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                         fill="currentColor" class="bi bi-check2" viewBox="0 0 16 16">
                        <path d="M13.854 3.646a.5.5 0 0 1
                                 0 .708l-7 7a.5.5 0 0
                                 1-.708 0l-3.5-3.5a.5.5
                                 0 1 1 .708-.708L6.5
                                 10.293l6.646-6.647a.5.5
                                 0 0 1 .708 0" />
                    </svg>
                    Guardar
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private Marca marca = new Marca();
    private List<Marca> listamarca = new List<Marca>();
    string Mensaje = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        var resp = await http.Get<List<Marca>>("api/Marca");
        if (!resp.Error)
        {
            listamarca = resp.Respuesta;
        }
        else
        {
            Mensaje = "Error al cargar marcas";
        }
    }

    private async Task Grabar()
    {
        var HttpRespuesta = await http.Post<Marca, int>("api/Marca", marca);
        if (!HttpRespuesta.Error)
        {
            await Leer();
            marca = new Marca(); // Limpiar formulario
        }
        else
        {
            // Manejo de errores si querés
        }
    }

    private async Task EliminarTipoGasto(int id)
    {
        await http.Delete($"api/Marca/{id}");
        await Leer();
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Producto/Crear");
    }
}